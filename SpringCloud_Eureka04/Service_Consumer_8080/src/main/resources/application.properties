server.port=8080
spring.application.name=consumer-server
# eureka配置 注册到服务中心
# 需要注册给Eureka Server的地址，也就是将自己注册给哪一个Eureka Server
# 实际上，由于Eureka Server集群的各个节点相互注册后，服务只需要注册到集群中的某一个节点上，就相当于注册到集群中的所有节点上。
# 但是，当服务只注册到集群中的某一个节点上时，如果这个节点宕机了，那么该服务将无法注册。所以，实际开发中，都会将服务注册到集群中的所有节点上。
# url中的localhost也可写为注册中心的hostname，如eurekaServer8090、eurekaServer8091
eureka.client.service-url.defaultZone=http://localhost:8090/eureka/,http://localhost:8091/eureka/
# 使用ip地址向Eureka注册
eureka.instance.prefer-ip-address=true
# 上面的配置已经可以使用ip注册了，但显示的还是主机名，所以这里设置显示的注册名
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}
# 续约时间间隔（秒）
eureka.instance.lease-renewal-interval-in-seconds=5
# 续约到期时间（秒）
eureka.instance.lease-expiration-duration-in-seconds=30
# lease-renewal-interval-in-seconds：续约时间间隔（默认30秒）。
# 表示eureka client发送心跳给server端的频率。
# lease-expiration-duration-in-seconds：续约到期时间（默认90秒）。
# 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。

# 构造熔断器backendA实例
# 配置断路器OPEN状态的失败率阈值为30%
resilience4j.circuitbreaker.instances.backendA.failure-rate-threshold=30
# 配置滑动窗口类型为时间窗口型
resilience4j.circuitbreaker.instances.backendA.sliding-window-type=TIME_BASED
# 配置滑动窗口长度为10秒
resilience4j.circuitbreaker.instances.backendA.sliding-window-size=10
# 配置滑动窗口内最小请求个数为5
resilience4j.circuitbreaker.instances.backendA.minimum-number-of-calls=5
# 配置断路器能自动从OPEN状态变为HALF_OPEN状态，默认等待时间为5秒
resilience4j.circuitbreaker.instances.backendA.wait-duration-in-open-state=5s
# 配置断路器HALF_OPEN状态时允许测试响应能力的请求数为3
resilience4j.circuitbreaker.instances.backendA.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.configs.backendA.record-exceptions[0]=java.lang.Exception

# 构造熔断器backendB实例
# 配置断路器OPEN状态的失败率阈值为50%
resilience4j.circuitbreaker.instances.backendB.failure-rate-threshold=50
# 配置断路器OPEN状态的慢调用阈值为30%
resilience4j.circuitbreaker.instances.backendB.slow-call-rate-threshold=30
# 配置断路器判断是否为慢调用的时间阈值为2秒
resilience4j.circuitbreaker.instances.backendB.slow-call-duration-threshold=2s
# 配置滑动窗口类型为时间窗口型
resilience4j.circuitbreaker.instances.backendB.sliding-window-type=TIME_BASED
# 配置滑动窗口长度为10秒
resilience4j.circuitbreaker.instances.backendB.sliding-window-size=10
# 配置滑动窗口内最小请求个数为5
resilience4j.circuitbreaker.instances.backendB.minimum-number-of-calls=5
# 配置断路器能自动从OPEN状态变为HALF_OPEN状态，默认等待时间为5秒
resilience4j.circuitbreaker.instances.backendB.wait-duration-in-open-state=5s
# 配置断路器HALF_OPEN状态时允许测试响应能力的请求数为3
resilience4j.circuitbreaker.instances.backendB.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.configs.backendB.record-exceptions[0]=java.lang.Exception